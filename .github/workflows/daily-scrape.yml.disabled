name: Scrape IVU and Publish ICS

on:
  schedule:
    - cron: '0 5 * * *'   # cada d√≠a 05:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4 icalendar pytz
      - name: Install Playwright browsers & OS deps
        run: |
          playwright install chromium
          playwright install-deps

      - name: Run scraper
        env:
          IVU_USER: ${{ secrets.IVU_USER }}
          IVU_PASS: ${{ secrets.IVU_PASS }}
        run: |
          mkdir -p public/calendars
          python scrape_and_publish.py > output.txt || (cat output.txt && exit 1)
          echo "----- Generated files -----"
          ls -R public || true

      # ‚ö†Ô∏è Aviso si no hay ICS
      - name: Check ICS presence
        run: |
          if ! ls public/calendars/*.ics >/dev/null 2>&1; then
            echo "::error::No se generaron archivos .ics en public/calendars"; 
            exit 1
          fi

      # üè† Generar index.html con enlaces a los .ics
      - name: Build index.html
        run: |
          python - <<'PY'
          import os,glob,html
          files=sorted(glob.glob('public/calendars/*.ics'))
          os.makedirs('public',exist_ok=True)
          with open('public/index.html','w',encoding='utf-8') as f:
              f.write('<meta charset="utf-8"><h1>Calendarios de turnos</h1><ul>')
              for p in files:
                  name=os.path.basename(p)
                  f.write(f'<li><a href="calendars/{html.escape(name)}">{html.escape(name)}</a></li>')
              f.write('</ul>')
          PY

      - name: Upload debug artifacts (if any)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: debug-artifacts
          path: |
            debug/**
            output.txt

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
